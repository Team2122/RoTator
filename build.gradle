import org.teamtators.gradle.RioPlugin

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'
        compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.2'
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2'
        compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.7.5'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.5'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.7.5'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.5'
        compile group: 'com.google.guava', name: 'guava', version: '19.0'
        compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
        compile group: 'com.google.inject.extensions', name: 'guice-multibindings', version: '4.1.0'
    }
}

project(':core') {

}


project(':rio') {
    apply plugin: RioPlugin

    repositories {
        maven {
            it.name = "WPI"
            it.url = "http://first.wpi.edu/FRC/roborio/maven/release"
        }
    }

    configurations {
        source
    }

    dependencies {
        compile project(':core')

        compile 'edu.wpi.first.wpilib.networktables.java:NetworkTables:+:desktop'
        compile 'edu.wpi.first.wpilib.networktables.java:NetworkTables:+:arm'
        compile 'edu.wpi.first.wpilibj:wpilibJavaFinal:+'

        source 'edu.wpi.first.wpilib.networktables.java:NetworkTables:+:sources'
        source 'edu.wpi.first.wpilibj:wpilibJavaFinal:+:sources'
    }

    evaluationDependsOn(':core')

    rio {
        teamNumber = 212
    }

    def robotClass = 'org.teamtators.rotator.Robot'

    def robotManifest = {
        attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
        attributes 'Robot-Class': robotClass
    }

    jar {
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        manifest robotManifest
    }
}

project(':desktop') {
    apply plugin: 'application'

    dependencies {
        compile project(':core')
    }

    evaluationDependsOn(':core')

    mainClassName = 'org.teamtators.rotator.Main'

    def jarManifest = {
        attributes 'Main-Class': mainClassName
    }

    jar {
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        manifest jarManifest
    }

    run {
        workingDir = file('../')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}